{{#if isInvalid}}
  {{frost-bunsen-validation-result
    model=propValidationResult
    type=invalidSchemaType
  }}
{{else}}
  {{#if cellTabs.length}}
    {{#frost-tabs
      hook=hookPrefix
      onChange=(action 'handleTabChange')
      selectedTab=tabSelection
      tabs=(array)
      as |controls|
    }}
      {{#each cellTabs key='@index' as |tab|}}
        {{controls.tab
          contentClass=tab.classNames
          content=(component 'frost-bunsen-cell'
            bunsenModel=tab.bunsenModel
            bunsenView=renderView
            cellConfig=tab.cell
            errors=renderErrors
            formDisabled=disabled
            getRootProps=(action 'getRootProps')
            isRequired=(frost-bunsen-is-required
              bunsenModel=renderModel
              cell=tab.cell
              cellDefinitions=renderView.cellDefinitions
              value=renderValue
            )
            hookPrefix=hookPrefix
            onChange=(action 'handleChange')
            onError=(action 'handleError')
            readOnly=true
            registerForFormValueChanges=(action 'registerComponentForFormValueChanges')
            renderers=renderers
            showAllErrors=showAllErrors
            unregisterForFormValueChanges=(action 'unregisterComponentForFormValueChanges')
            value=renderValue
            valueChangeSet=valueChangeSet
          )
          id=tab.id
          text=tab.alias
        }}
      {{/each}}
    {{/frost-tabs}}
  {{else}}
    {{#each precomputedCells as |cell|}}
      {{frost-bunsen-cell
        bunsenModel=cell.bunsenModel
        bunsenView=renderView
        cellConfig=cell.cellConfig
        errors=renderErrors
        formDisabled=disabled
        getRootProps=(action 'getRootProps')
        hookPrefix=hookPrefix
        isRequired=(frost-bunsen-is-required
          bunsenModel=renderModel
          cell=cell.cellConfig
          cellDefinitions=renderView.cellDefinitions
          value=renderValue
        )
        onChange=(action 'handleChange')
        onError=(action 'handleError')
        readOnly=true
        registerForFormValueChanges=(action 'registerComponentForFormValueChanges')
        renderers=renderers
        showAllErrors=showAllErrors
        unregisterForFormValueChanges=(action 'unregisterComponentForFormValueChanges')
        value=renderValue
        valueChangeSet=valueChangeSet
      }}
    {{/each}}
  {{/if}}
{{/if}}
